<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on No Limit</title>
    <link>/posts/</link>
    <description>Recent content in Posts on No Limit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 02 Jan 2024 16:45:20 +0800</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Github Page 构建个人 Blog</title>
      <link>/posts/%E4%BD%BF%E7%94%A8-github-page-%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA-blog/</link>
      <pubDate>Tue, 02 Jan 2024 16:45:20 +0800</pubDate>
      
      <guid>/posts/%E4%BD%BF%E7%94%A8-github-page-%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA-blog/</guid>
      <description>为什么是 Github 根据 People Die, but Long Live GitHub 的文章，虽然示例中的作者已经再多年前去世，但他的内容还是可以继续访问。
抛开很多时候大家的 「Github 道德」的情况，Github 目前再肉眼可见的十年内，应该还是会一直作为可持续的内容存储的
为什么是 Page 重要的事情说三遍，那就是：免费，免费，免费。
采用 Github作为 Blog 的方式，目前看到的有
使用 Github help 中提供的方式，即: 新建 repo&amp;ndash;&amp;gt;配置 *.github.io 的地址 &amp;ndash;&amp;gt; 通过各种静态框架写 MD 文件 基于 Git Issuse 的方式 如果不想用各种主题、配置，不想学习各种内容，回归到本质的内容，那就是选择 Git Issuse方式。
目前因为还能折腾，所以采用第一种， 使用 hugo + Github Page</description>
    </item>
    
  </channel>
</rss>
